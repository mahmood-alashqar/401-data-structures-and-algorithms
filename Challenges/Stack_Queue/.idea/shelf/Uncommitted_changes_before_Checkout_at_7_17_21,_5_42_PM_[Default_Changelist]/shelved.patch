Index: app/src/test/java/Stack_QueuePackege/AppTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * This Java source file was generated by the Gradle 'init' task.\n */\npackage Stack_QueuePackege;\n\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\npublic class AppTest {\n    @Test public void testAppHasAGreeting() {\n        Stack_QueuePackege.App classUnderTest = new Stack_QueuePackege.App();\n        assertNotNull(\"app should have a greeting\", classUnderTest.getGreeting());\n    }\n    @Test public void testEnQueue(){\n        Animal animal = new Animal(\"cat\");\n        animal.enqueue(animal.getKind());\n        assertEquals(\"cat\",animal.getKind());\n    }\n    @Test public void testdeQueue(){\n        Animal animal = new Animal(\"dog\");\n        assertEquals(\" the pref was a dog\",animal.deQueue(\"dog\"));\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/Stack_QueuePackege/AppTest.java b/app/src/test/java/Stack_QueuePackege/AppTest.java
--- a/app/src/test/java/Stack_QueuePackege/AppTest.java	(revision b8062a3a342a5c216669fe9b7142de28703da1a4)
+++ b/app/src/test/java/Stack_QueuePackege/AppTest.java	(date 1626532914119)
@@ -11,13 +11,32 @@
         Stack_QueuePackege.App classUnderTest = new Stack_QueuePackege.App();
         assertNotNull("app should have a greeting", classUnderTest.getGreeting());
     }
-    @Test public void testEnQueue(){
-        Animal animal = new Animal("cat");
-        animal.enqueue(animal.getKind());
-        assertEquals("cat",animal.getKind());
+    @Test
+    public void testPushStack(){
+        Stack testStackList = new Stack();
+        testStackList.push(1);
+        assertNotNull(testStackList);
+    }
+    @Test
+    public void testPeekStack(){
+        Stack testStackList = new Stack();
+        testStackList.push(1);
+        testStackList.push(2);
+        testStackList.push(3);
+        assertEquals(3 , testStackList.peek());
     }
-    @Test public void testdeQueue(){
-        Animal animal = new Animal("dog");
-        assertEquals(" the pref was a dog",animal.deQueue("dog"));
+    @Test
+    public void testEnqueueQueue(){
+        Queue testQueueList = new Queue();
+        testQueueList.enQueue(1);
+        assertNotNull(testQueueList);
+    }
+    @Test
+    public void testPeekQueue(){
+        Queue testQueueList = new Queue();
+        testQueueList.enQueue(1);
+        testQueueList.enQueue(2);
+        testQueueList.enQueue(3);
+        assertEquals(1 , testQueueList.peek());
     }
 }
